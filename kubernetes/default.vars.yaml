# Note: For {dev.,beta.,}conikuvat.fi and larppikuvat.fi, edegal_tag is overridden in Jenkinsfile.

edegal_image: edegal
edegal_static_image: edegal-static
edegal_admins: []

# By default image storage is configured using a PersistentVolumeClaim.
# In order to use NFS, set this to false.
# See also redis_storage_â€¦
edegal_storage_pvc: true

# Storage class used for picture storage, or !Void for default
edegal_storage_pvc_storageclass: !Void

# To use an existing NFS export as the image storage, set edegal_storage_nfs to the IP of the server.
edegal_storage_nfs: ''
edegal_storage_nfs_path: /

# Leave empty if you have kubernetes-secret-generator installed in your cluster and want to have it generate a SECRET_KEY for you
edegal_secret_key: ''
edegal_secret_managed: true

# Kompassi OAuth2 (NOTE: do not set if djangoapp_secret_managed: false)
kompassi_client_id: ''
kompassi_client_secret: ''

# admin group members get django is_superuser, editor group members get only is_staff and privileges to eg. upload photos
kompassi_admin_group: admins
kompassi_editor_group: conikuvat-staff

smtp_server: ''
smtp_default_from_email: ''

# Set this to the public hostname of your service.
ingress_public_hostname: edegal.localhost

# If you use ingress-nginx and cert-manager, TLS can be automatically configured by setting this to true.
ingress_letsencrypt_enabled: false
ingress_letsencrypt_cluster_issuer: letsencrypt-prod

redis_managed: true
redis_image: redis
redis_hostname: redis
redis_broker_database: 1
redis_cache_database: 2
redis_storage_pvc: true
redis_storage_pvc_storageclass: !Void

# NOTE: "managed" PostgreSQL should not be considered production-ready.
postgres_managed: true
postgres_image: postgres
postgres_hostname: postgres
postgres_username: edegal
postgres_database: edegal
postgres_storage_pvc_storageclass: !Void

# Leave empty if you want to let kubernetes-secret-generator generate one for you
postgres_password: ''

# note: managed postgres doesn't provide ssl, only enable if using external postgres
postgres_ssl: false

# Whether or not "python manage.py setup" should run as init container
setup_should_run: true

# Configuration vars end here. Configuration snippets follow. May be overridden for advanced configuration.

# Security context for Edegal and Celery pods
# User 1082 (edegal) is guaranteed to exist in the Docker image, only change if you know what you're doing
edegal_pod_security_context:
  runAsUser: 1082
  runAsGroup: 1082
  fsGroup: 1082
edegal_container_security_context:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

# Common environment vars for both edegal and celery pods.
edegal_environment:
  - name: POSTGRES_HOSTNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: hostname
  - name: POSTGRES_DATABASE
    valueFrom:
      secretKeyRef:
        name: postgres
        key: database
  - name: POSTGRES_USERNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: username
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres
        key: password
  - !If
      test: !Var postgres_ssl
      then:
        name: POSTGRES_EXTRAS
        value: '?sslmode=require'
  - name: REDIS_HOSTNAME
    value: !Var redis_hostname

  # Format to ensure these are strings
  - name: REDIS_BROKER_DATABASE
    value: !Format "{redis_broker_database}"
  - name: REDIS_CACHE_DATABASE
    value: !Format "{redis_cache_database}"
  - name: SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: edegal
        key: secretKey
  - name: KOMPASSI_OAUTH2_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: edegal
        key: kompassiClientId
  - name: KOMPASSI_OAUTH2_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: edegal
        key: kompassiClientSecret
  - name: KOMPASSI_ADMIN_GROUP
    value: !Var kompassi_admin_group
  - name: KOMPASSI_EDITOR_GROUP
    value: !Var kompassi_editor_group
  - name: ALLOWED_HOSTS
    value: !Var ingress_public_hostname
  - name: EMAIL_HOST
    value: !Var smtp_server
  - name: DEFAULT_FROM_EMAIL
    value: !Var smtp_default_from_email
  - name: ADMINS
    value: !Join
      items: !Var edegal_admins
      separator: ","

# Common volumes for edegal, celery and nginx pods.
edegal_media_volume_mounts:
  - mountPath: /usr/src/app/media
    name: edegal-media
  - mountPath: /tmp
    name: edegal-temp
edegal_media_volumes_definition:
  - name: edegal-temp
    emptyDir: {}
  - !If
      test: !Var edegal_storage_pvc
      then:
        name: edegal-media
        persistentVolumeClaim:
          claimName: edegal-media
  - !If
      test: !Var edegal_storage_nfs
      then:
        name: edegal-media
        nfs:
          server: !Var edegal_storage_nfs
          path: !Var edegal_storage_nfs_path

# Default annotations work for nginx ingress with or without LetsEncrypt TLS. Override if you need something else.
ingress_annotations: !Merge
  - nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.org/client-max-body-size: "100m"
  - !If
      test: !Var ingress_letsencrypt_enabled
      then:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/ssl-redirect: "true"

ingress_tls: !If
  test: !Var ingress_letsencrypt_enabled
  then:
    - secretName: ingress-letsencrypt
      hosts:
        - !Var ingress_public_hostname
