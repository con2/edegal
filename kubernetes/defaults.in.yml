!Defaults

edegal_tag: staging
edegal_repository: harbor.con2.fi/con2/edegal
edegal_image: !Format "{edegal_repository}:{edegal_tag}"
edegal_static_image: !Format "{edegal_repository}-static:{edegal_tag}"

# By default image storage is configured using a PersistentVolumeClaim. In order to use NFS, set this to false.
# See also redis_storage_â€¦
edegal_storage_pvc: true
edegal_storage_pvc_storageclass: !Void

# To use an existing NFS export as the image storage, set edegal_storage_nfs to the IP of the server.
edegal_storage_nfs: ''
edegal_storage_nfs_path: /

ingress_public_hostname: edegal.127.0.0.1.xip.io
ingress_letsencrypt_enabled: false

redis_managed: true
redis_image: redis
redis_hostname: redis
redis_broker_database: 1
redis_cache_database: 2
redis_storage_pvc: true
redis_storage_pvc_storageclass: !Void

# NOTE: "managed" PostgreSQL should not be considered production-ready.
postgres_managed: true
postgres_image: postgres
postgres_hostname: postgres
postgres_database: edegal
postgres_storage_pvc_storageclass: !Void

# note: managed postgres doesn't provide ssl, only enable if using external postgres
postgres_ssl: true

# Whether or not "python manage.py setup" should run as init container
setup_should_run: true

# Security context for Edegal and Celery pods
# User 1082 (edegal) is guaranteed to exist in the Docker image, only change if you know what you're doing
edegal_security_context:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsUser: 1082
  runAsGroup: 1082
  fsGroup: 1082

# Common environment vars for both edegal and celery pods.
edegal_environment:
  - name: POSTGRES_HOSTNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: hostname
  - name: POSTGRES_DATABASE
    valueFrom:
      secretKeyRef:
        name: postgres
        key: database
  - name: POSTGRES_USERNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: username
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres
        key: password
  - !If
      test: !Var postgres_ssl
      then:
        name: POSTGRES_EXTRAS
        value: '?sslmode=require'
  - name: REDIS_HOSTNAME
    value: !Var redis_hostname

  # Format to ensure these are strings
  - name: REDIS_BROKER_DATABASE
    value: !Format "{redis_broker_database}"
  - name: REDIS_CACHE_DATABASE
    value: !Format "{redis_cache_database}"
  - name: SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: edegal
        key: secretKey
  - name: ALLOWED_HOSTS
    value: !Var ingress_public_hostname

# Common volumes for edegal, celery and nginx pods.
edegal_media_volume_mounts:
  - mountPath: /usr/src/app/media
    name: edegal-media
  - mountPath: /tmp
    name: edegal-temp
edegal_media_volumes_definition:
  - name: edegal-temp
    emptyDir: {}
  - !If
      test: !Var edegal_storage_pvc
      then:
        name: edegal-media
        persistentVolumeClaim:
          claimName: edegal-media
  - !If
      test: !Var edegal_storage_nfs
      then:
        name: edegal-media
        nfs:
          server: !Var edegal_storage_nfs
          path: !Var edegal_storage_nfs_path
