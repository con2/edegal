version: '2.2'
services:
  backend:
    build: backend
    init: true
    command: scripts/wait-for-it.sh --timeout=60 --strict postgres:5432 -- scripts/wait-for-it.sh --timeout=60  --strict rabbitmq:5672 -- python manage.py docker_start
    ports:
      - 8000:8000
    links:
      - rabbitmq
      - postgres
      - memcache
    volumes:
      - ./backend/edegal:/usr/src/app/edegal
      - media:/usr/src/app/media
    environment:
      DEBUG: 1
      PYTHONUNBUFFERED: 1
      DATABASE_URL: psql://edegal:edegal@postgres/edegal
      ALLOWED_HOSTS: '*'
      BROKER_URL: amqp://guest:guest@rabbitmq/
      CACHE_URL: memcache://memcache
  worker:
    build: backend
    init: true
    command: scripts/wait-for-it.sh --timeout=60 --strict postgres:5432 -- scripts/wait-for-it.sh --timeout=60  --strict rabbitmq:5672 -- celery -A edegal_site.celery:app worker
    links:
      - rabbitmq
      - postgres
      - memcache
    volumes:
      - ./backend/edegal:/usr/src/app/edegal
      - media:/usr/src/app/media
    environment:
      DEBUG: 1
      PYTHONUNBUFFERED: 1
      DATABASE_URL: psql://edegal:edegal@postgres/edegal
      ALLOWED_HOSTS: '*'
      BROKER_URL: amqp://guest:guest@rabbitmq/
      CACHE_URL: memcache://memcache
  frontend:
    build: frontend
    init: true
    ports:
      - 3000:3000
    links:
      - backend
    volumes:
      - ./frontend/src:/usr/src/app/src
    environment:
      REACT_APP_EDEGAL_LOGIN_URL: http://localhost:8000/admin/
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/edegal_site/sql/50_create_extension_tsm_system_rows.sql:/docker-entrypoint-initdb.d/50_create_extension_tsm_system_rows.sql
    environment:
      POSTGRES_USER: edegal
      POSTGRES_PASSWORD: edegal
      POSTGRES_DB: edegal
  rabbitmq:
    image: rabbitmq
  memcache:
    image: memcached
volumes:
  postgres-data: {}
  media: {}
